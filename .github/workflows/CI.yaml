name: CI

on:
  # GitHub has started calling new repo's first branch "main" https://github.com/github/renaming
  # Existing codes likely still have "master" as the primary branch
  # Both are tracked here to keep legacy and new codes working
  push:
    branches:
      - "master"
      - "main"
  pull_request:
    branches:
      - "master"
      - "main"
  # schedule:
  #   # Nightly tests run on master by default:
  #   #   Scheduled workflows run on the latest commit on the default or base branch.
  #   #   (from https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)
  #   - cron: "0 0 * * *"

jobs:
  test:
    name: Test on ${{ matrix.config.os }}, Python ${{ matrix.config.python-version }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
        - {
                os: ubuntu-latest,
                # os: [macOS-latest, ubuntu-latest, windows-latest]
                python-version: 3.8,
                cc: "gcc", cxx: "g++",
                cmake_flags: "-DPYTHON_BINDINGS=ON -DRUN_SWIG=ON"
        # python-version: [3.7, 3.8, 3.9]
             }

    steps:
    - uses: actions/checkout@v1

    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a

    - name: Install Dependencies (Linux)
      if: runner.os == 'Linux'
      run: sudo apt-get -qq install ninja-build swig libeigen3-dev libboost-all-dev

    - name: Get OpenBabel Tarball
      if: runner.os == 'Linux'
      shell: bash
      run: |
        wget https://github.com/openbabel/openbabel/releases/download/openbabel-3-1-1/openbabel-3.1.1-source.tar.bz2 && tar xjvf openbabel-3.1.1-source.tar.bz2 
        cd openbabel-3.1.1
        mkdir build && cd build
        cmake -GNinja -DCMAKE_C_COMPILER=${{matrix.config.cc}} -DCMAKE_CXX_COMPILER=${{matrix.config.cxx}} ${{matrix.config.cmake_flags}}
    - name: Build Openbabel
      run: CC=${{matrix.config.cc}} CXX=${{matrix.config.cxx}} cmake --build .
      shell: bash
      working-directory: ${{ runner.workspace }}/build
   
    - name: back home
      run: cd ${{ runner.workspace }}

    - name: Setup conda
      uses: s-weigand/setup-conda@v1
      with:
        update-conda: true
        python-version: ${{ matrix.config.python-version }}
        conda-channels: anaconda, conda-forge
    # - name: Set up Python ${{ matrix.python-version }}
    #   uses: actions/setup-python@v2
    #   with:
    #     python-version: ${{ matrix.python-version }}

    - name: Testing Dependencies
      shell: bash
      run: |
        python -m pip install -U pytest pytest-cov codecov

    - name: Install RDKit
      run: |
        conda install -c conda-forge rdkit 

    - name: Install package
      shell: bash
      run: |
        python -m pip install .

    - name: Run tests
      shell: bash
      run: |
        pytest -v --cov=open_combind --cov-report=xml --color=yes open_combind/tests/

    - name: CodeCov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-${{ matrix.config.os }}-py${{ matrix.config.python-version }}
